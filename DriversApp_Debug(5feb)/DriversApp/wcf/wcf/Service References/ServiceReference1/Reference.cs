//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int account_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string loginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paswoordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int account_id {
            get {
                return this.account_idField;
            }
            set {
                if ((this.account_idField.Equals(value) != true)) {
                    this.account_idField = value;
                    this.RaisePropertyChanged("account_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login {
            get {
                return this.loginField;
            }
            set {
                if ((object.ReferenceEquals(this.loginField, value) != true)) {
                    this.loginField = value;
                    this.RaisePropertyChanged("login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paswoord {
            get {
                return this.paswoordField;
            }
            set {
                if ((object.ReferenceEquals(this.paswoordField, value) != true)) {
                    this.paswoordField = value;
                    this.RaisePropertyChanged("paswoord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rol {
            get {
                return this.rolField;
            }
            set {
                if ((object.ReferenceEquals(this.rolField, value) != true)) {
                    this.rolField = value;
                    this.RaisePropertyChanged("rol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAccountService2")]
    public interface IAccountService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService2/GetAllAccounts", ReplyAction="http://tempuri.org/IAccountService2/GetAllAccountsResponse")]
        WCF.ServiceReference1.Account[] GetAllAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService2/GetAllAccounts", ReplyAction="http://tempuri.org/IAccountService2/GetAllAccountsResponse")]
        System.Threading.Tasks.Task<WCF.ServiceReference1.Account[]> GetAllAccountsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountService2Channel : WCF.ServiceReference1.IAccountService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountService2Client : System.ServiceModel.ClientBase<WCF.ServiceReference1.IAccountService2>, WCF.ServiceReference1.IAccountService2 {
        
        public AccountService2Client() {
        }
        
        public AccountService2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountService2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountService2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountService2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCF.ServiceReference1.Account[] GetAllAccounts() {
            return base.Channel.GetAllAccounts();
        }
        
        public System.Threading.Tasks.Task<WCF.ServiceReference1.Account[]> GetAllAccountsAsync() {
            return base.Channel.GetAllAccountsAsync();
        }
    }
}
